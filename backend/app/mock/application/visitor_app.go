// Code generated by MockGen. DO NOT EDIT.
// Source: application/visitor_app.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/jumpei00/board/backend/app/domain"
)

// MockVisitorApplication is a mock of VisitorApplication interface.
type MockVisitorApplication struct {
	ctrl     *gomock.Controller
	recorder *MockVisitorApplicationMockRecorder
}

// MockVisitorApplicationMockRecorder is the mock recorder for MockVisitorApplication.
type MockVisitorApplicationMockRecorder struct {
	mock *MockVisitorApplication
}

// NewMockVisitorApplication creates a new mock instance.
func NewMockVisitorApplication(ctrl *gomock.Controller) *MockVisitorApplication {
	mock := &MockVisitorApplication{ctrl: ctrl}
	mock.recorder = &MockVisitorApplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVisitorApplication) EXPECT() *MockVisitorApplicationMockRecorder {
	return m.recorder
}

// CountupVisitors mocks base method.
func (m *MockVisitorApplication) CountupVisitors() (*domain.Visitor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CountupVisitors")
	ret0, _ := ret[0].(*domain.Visitor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CountupVisitors indicates an expected call of CountupVisitors.
func (mr *MockVisitorApplicationMockRecorder) CountupVisitors() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountupVisitors", reflect.TypeOf((*MockVisitorApplication)(nil).CountupVisitors))
}

// GetVisitorsStat mocks base method.
func (m *MockVisitorApplication) GetVisitorsStat() (*domain.Visitor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVisitorsStat")
	ret0, _ := ret[0].(*domain.Visitor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVisitorsStat indicates an expected call of GetVisitorsStat.
func (mr *MockVisitorApplicationMockRecorder) GetVisitorsStat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVisitorsStat", reflect.TypeOf((*MockVisitorApplication)(nil).GetVisitorsStat))
}

// ResetVisitors mocks base method.
func (m *MockVisitorApplication) ResetVisitors() (*domain.Visitor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetVisitors")
	ret0, _ := ret[0].(*domain.Visitor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResetVisitors indicates an expected call of ResetVisitors.
func (mr *MockVisitorApplicationMockRecorder) ResetVisitors() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetVisitors", reflect.TypeOf((*MockVisitorApplication)(nil).ResetVisitors))
}
