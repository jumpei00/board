basePath: /
definitions:
  domain.User:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  request.RequestCommentCreate:
    properties:
      comment:
        type: string
    required:
    - comment
    type: object
  request.RequestCommentEdit:
    properties:
      comment:
        type: string
    required:
    - comment
    type: object
  request.RequestSignIn:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.RequestSignUp:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.RequestThreadCreate:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  request.RequestThreadEdit:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  response.ResponseComment:
    properties:
      comment:
        type: string
      commentKey:
        type: string
      contributor:
        type: string
      create_date:
        type: string
      update_date:
        type: string
    type: object
  response.ResponseThread:
    properties:
      comment_sum:
        type: integer
      contributor:
        type: string
      create_date:
        type: string
      thread_key:
        type: string
      title:
        type: string
      update_date:
        type: string
      views:
        type: integer
    type: object
  response.ResponseThreadAndComments:
    properties:
      comments:
        items:
          $ref: '#/definitions/response.ResponseComment'
        type: array
      thread:
        $ref: '#/definitions/response.ResponseThread'
    type: object
  response.ResponseThreads:
    properties:
      threads:
        items:
          $ref: '#/definitions/response.ResponseThread'
        type: array
    type: object
  response.ResponseVisitor:
    properties:
      sum:
        type: integer
      today:
        type: integer
      yesterday:
        type: integer
    type: object
host: api.localhost.test
info:
  contact: {}
  description: This is api server of board application
  title: Board API
  version: "1.0"
paths:
  /api/threads:
    get:
      consumes:
      - application/json
      description: スレッドを全て取得します
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseThreads'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: スレッドを全て取得
      tags:
      - thread
    post:
      consumes:
      - application/json
      description: 新しいスレッドを作成します
      parameters:
      - description: スレッド作成情報
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.RequestThreadCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseThread'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: スレッドを新規作成
      tags:
      - thread
  /api/threads/{threadKey}:
    delete:
      consumes:
      - application/json
      description: 指定されたスレッドを削除し、それに紐づいているコメントも同時に削除する
      parameters:
      - description: スレッドキー
        in: path
        name: threadKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 指定のスレッドを削除
      tags:
      - thread
    get:
      consumes:
      - application/json
      description: スレッドキーに当てはまるスレッドを取得
      parameters:
      - description: スレッドキー
        in: path
        name: threadKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseThread'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 指定のスレッドを取得
      tags:
      - thread
    put:
      consumes:
      - application/json
      description: 指定されたスレッドを編集し更新する
      parameters:
      - description: スレッドキー
        in: path
        name: threadKey
        required: true
        type: string
      - description: スレッド編集情報
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.RequestThreadEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseThread'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 指定のスレッドを更新
      tags:
      - thread
  /api/threads/{threadKey}/comments:
    get:
      consumes:
      - application/json
      description: スレッドに紐づくコメントを全て取得
      parameters:
      - description: スレッドキー
        in: path
        name: threadKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseThreadAndComments'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: コメントを全て取得
      tags:
      - comment
    post:
      consumes:
      - application/json
      description: スレッドに対するコメントを作成する
      parameters:
      - description: スレッドキー
        in: path
        name: threadKey
        required: true
        type: string
      - description: コメント作成情報
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.RequestCommentCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseComment'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: スレッドへの新規コメントを作成
      tags:
      - comment
  /api/threads/{threadKey}/comments/{commentKey}:
    delete:
      consumes:
      - application/json
      description: 指定されたコメントを削除する
      parameters:
      - description: スレッドキー
        in: path
        name: threadKey
        required: true
        type: string
      - description: コメントキー
        in: path
        name: commentKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 指定されたコメントを削除
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: 指定されたコメントを編集し更新する
      parameters:
      - description: スレッドキー
        in: path
        name: threadKey
        required: true
        type: string
      - description: コメントキー
        in: path
        name: commentKey
        required: true
        type: string
      - description: コメント編集情報
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.RequestCommentEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseComment'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 指定されたコメントを更新
      tags:
      - comment
  /api/user/me:
    get:
      consumes:
      - application/json
      description: セッション情報からユーザーを取得する
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: ユーザー情報の取得
      tags:
      - user
  /api/user/signin:
    post:
      consumes:
      - application/json
      description: ユーザーがログインできるか検証する
      parameters:
      - description: ログイン情報
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.RequestSignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: ログイン
      tags:
      - user
  /api/user/signout:
    delete:
      consumes:
      - application/json
      description: ユーザーをログアウトさせる
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: ログアウト
      tags:
      - user
  /api/user/signup:
    post:
      consumes:
      - application/json
      description: 新規ユーザーを作成する
      parameters:
      - description: 新規ユーザー作成情報
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.RequestSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: ユーザーの新規作成
      tags:
      - user
  /api/visitor:
    get:
      consumes:
      - application/json
      description: サイトへの訪問者情報を取得する
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseVisitor'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 訪問者統計の取得
      tags:
      - visitor
  /api/visitor/countup:
    put:
      consumes:
      - application/json
      description: サイトへの訪問回数をカウントアップさせる
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseVisitor'
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 訪問者のカウントアップ
      tags:
      - visitor
  /api/visitor/reset:
    put:
      consumes:
      - application/json
      description: 昨日の訪問者を今日の訪問者で上書きしリセットさせる
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: 訪問者のリセット
      tags:
      - visitor
swagger: "2.0"
